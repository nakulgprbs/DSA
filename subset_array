// checking wether array 2 is subset of array 1 or not 

#include <iostream>
#include <unordered_map>
using namespace std;

bool isSubset(int a1[], int n, int a2[], int m) {
    unordered_map<int, int> freqA1;

    // Count the frequency of each element in a1
    for (int i = 0; i < n; i++) {
        freqA1[a1[i]]++;
    }

    // Check if all elements in a2 have enough frequency in a1
    for (int i = 0; i < m; i++) {
        if (freqA1[a2[i]] > 0) {
            freqA1[a2[i]]--; // Use up one occurrence of a2[i]
        } else {
            return false; // a2[i] is not present enough times in a1
        }
    }

    return true;
}

int main() {
    int n, m;
    cout << "Enter length of Array 1: ";
    cin >> n;
    int a1[n];
    cout << "Enter elements of array 1: ";
    for (int i = 0; i < n; i++) {
        cin >> a1[i];
    }

    cout << "Enter length of Array 2: ";
    cin >> m;
    int a2[m];
    cout << "Enter elements of array 2: ";
    for (int i = 0; i < m; i++) {
        cin >> a2[i];
    }

    if (isSubset(a1, n, a2, m)) {
        cout << "Array 2 is a subset of Array 1" << endl;
    } else {
        cout << "Array 2 is not a subset of Array 1" << endl;
    }

    return 0;
}
