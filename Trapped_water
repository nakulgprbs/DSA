//Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// Function to compute the total amount of trapped water
int trap(const vector<int>& height) {
    // If the elevation map is empty, no water can be trapped
    if (height.empty()) return 0;

    // Initialize two pointers, one starting from the left and one from the right
    int left = 0;
    int right = height.size() - 1;

    // Variables to store the maximum height to the left and right of the current position
    int left_max = 0;
    int right_max = 0;

    // Variable to accumulate the total trapped water
    int total_water = 0;

    // Loop until the left and right pointers meet
    while (left < right) {
        // Compare the heights at the left and right pointers
        if (height[left] < height[right]) {
            // If the current left height is greater than or equal to the maximum left height seen so far
            if (height[left] >= left_max) {
                // Update the left maximum height
                left_max = height[left];
            } else {
                // Calculate the trapped water at the current left position
                // Water trapped is the difference between the left maximum height and the current left height
                total_water += left_max - height[left];
            }
            // Move the left pointer to the right
            ++left;
        } else {
            // If the current right height is greater than or equal to the maximum right height seen so far
            if (height[right] >= right_max) {
                // Update the right maximum height
                right_max = height[right];
            } else {
                // Calculate the trapped water at the current right position
                // Water trapped is the difference between the right maximum height and the current right height
                total_water += right_max - height[right];
            }
            // Move the right pointer to the left
            --right;
        }
    }

    // Return the total amount of trapped water
    return total_water;
}

int main() {
    int n;
    // Read the number of elements in the elevation map from the user
    cout << "Enter the number of elements in the elevation map: ";
    cin >> n;

    vector<int> height(n);
    // Read the heights of the elevation map from the user
    cout << "Enter the heights of the elevation map:" << endl;
    for (int i = 0; i < n; ++i) {
        cin >> height[i];
    }

    // Call the trap function to compute the total trapped water
    int trapped_water = trap(height);
    // Print the result
    cout << "Total water trapped: " << trapped_water << " units" << endl;

    return 0;
}
